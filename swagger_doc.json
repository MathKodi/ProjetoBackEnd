{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "REST API",
    "description": ""
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/": {
      "get": {
        "description": "Rota inicial apenas dando boas vindas ao API",
        "responses": {
          "200": {
            "description": "Retorna msg de boas vindas"
          }
        }
      }
    },
    "/auth/": {
      "get": {
        "description": "Rota inicial para Usuarios",
        "responses": {
          "200": {
            "description": "Retorna msg de boas vindas na rota de auth"
          }
        }
      }
    },
    "/auth/registrar": {
      "post": {
        "description": "Rota para registrar usuarios",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "example": "Para registrar admin: fulanoadmin | para adicionar usuario: fulano"
                },
                "senha": {
                  "example": "deusmeajuda"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Usuario Criado"
          },
          "422": {
            "description": "Erro -> tentando usar nome existente"
          },
          "500": {
            "description": "erro no servidor"
          }
        }
      }
    },
    "/auth/admin": {
      "post": {
        "description": "Rota para admins registrar novos admins",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "example": "É necessário ter 'admin' no nome: Professoradmin"
                },
                "senha": {
                  "example": "aaa123"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "admin criado"
          },
          "400": {
            "description": "token invalido"
          },
          "401": {
            "description": "acesso negado -> nao é admin ou não tem token"
          },
          "422": {
            "description": "Erro -> tentando usar nome existente ou o nome não possui 'admin'" 
          },
          "500": {
            "description": "erro no servidor"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "description": "Rota para Login de Usuario, caso o nome do usuario tenha ",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "example": "nome existente: kodiadmin"
                },
                "senha": {
                  "example": "senha do usuario: sabemuito"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "logado"
          },
          "422": {
            "description": "usuario nao encontrado"
          },
          "500": {
            "description": "erro no servidor"
          }
        }
      }
    },
    "/auth/excluirMinhaConta": {
      "delete": {
        "description": "Rota para o usuario excluir sua própria conta",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "excluido sucesso"
          },
          "400": {
            "description": "token invalido"
          },
          "401": {
            "description": "não tem token"
          },
          "500": {
            "description": "erro no servidor"
          }
        }
      }
    },
    "/auth/excluir/{nome}": {
      "delete": {
        "description": "Rota para o admin excluir a conta de qualquer usuario",
        "parameters": [
          {
            "name": "nome",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "admin excluiu alguma conta"
          },
          "400": {
            "description": "token invalido"
          },
          "401": {
            "description": "token invalido -> usuario tentando acessar"
          },
          "404": {
            "description": "nome não encontrado"
          },
          "500": {
            "description": "erro no servidor"
          }
        }
      }
    },
    "/auth/attNome/{nome}": {
      "put": {
        "description": "Rota para o usuario alterar seu proprio nome",
        "parameters": [
          {
            "name": "nome",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "nome alterado"
          },
          "400": {
            "description": "token invalido"
          },
          "401": {
            "description": "acesso negado -> nao tem token ou token invalido"
          },
          "404": {
            "description": "nome não informado"
          },
          "500": {
            "description": "erro no servidor"
          }
        }
      }
    },
    "/auth/attSenha/{senha}": {
      "put": {
        "description": "Rota para o usuario alterar sua propria senha",
        "parameters": [
          {
            "name": "senha",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "senha alterado"
          },
          "400": {
            "description": "token invalido"
          },
          "401": {
            "description": "token invalido -> não possui token"
          },
          "404": {
            "description": "senha nao informada"
          },
          "500": {
            "description": "erro no servidor"
          }
        }
      }
    },
    "/auth/attUsuario/{id}/{nome}/{senha}": {
      "put": {
        "description": "Rota para o admin alterar os dados de outros usuarios",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "nome",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "senha",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "admin alterou outro usuario"
          },
          "400": {
            "description": "token invalido"
          },
          "401": {
            "description": "token invalido -> usuario tentando acessar"
          },
          "500": {
            "description": "erro no servidor"
          }
        }
      }
    },
    "/auth/usuarios": {
      "get": {
        "description": "Rota para listar o Usuario, recebe query limite e pagina, limite para quantos usuarios aparecerao(5, 10, 30) e pagina para ver os proximos usuarios",
        "parameters": [
          {
            "name": "limite",
            "in": "query",
            "type": "string"
          },
          {
            "name": "pagina",
            "in": "query",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "conseguiu listar com sucesso"
          },
          "400": {
            "description": "token invalido"
          },
          "401": {
            "description": "token invalido -> usuario tentando acessar"
          },
          "404": {
            "description": "Query errado -> valor do query apenas 5, 10 ou 30"
          }
        }
      }
    },
    "/pokemon/": {
      "get": {
        "description": "Rota incial apenas de boas vindas",
        "responses": {
          "200": {
            "description": "Retorna msg de boas vindas na rota de pokemon"
          }
        }
      }
    },
    "/pokemon/criarHabilidade": {
      "post": {
        "description": "Rota para criar uma habilidade, precisa do token de admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "precisa ser unico: 10"
                },
                "nome": {
                  "example": "chute no saco"
                },
                "descricao": {
                  "example": "doi muito"
                },
                "efeito": {
                  "example": "atordoante"
                },
                "level": {
                  "example": "10"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "habilidade criada"
          },
          "400": {
            "description": "token invalido"
          },
          "401": {
            "description": "token invalido -> usuario tentando acessar"
          },
          "422": {
            "description": "erro -> utilizando id já existente"
          },
          "500": {
            "description": "erro no servidor"
          }
        }
      }
    },
    "/pokemon/criarPokemon": {
      "post": {
        "description": "Rota para criar um Pokemon, precisa ter o token de admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "example": "charizard"
                },
                "tipo": {
                  "example": "fogo/voador"
                },
                "numero": {
                  "example": "6"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "pokemon criado"
          },
          "400": {
            "description": "token invalido"
          },
          "401": {
            "description": "token invalido -> usuario tentando acessar"
          },
          "422": {
            "description": "erro -> falta digitar algum atributo no body"
          },
          "500": {
            "description": "erro no servidor"
          }
        }
      }
    },
    "/pokemon/criarTreinador": {
      "post": {
        "description": "Rota para criar um Treinador, precisa ter o token de usuario",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "example": "Kojins"
                },
                "level": {
                  "example": "10"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Treinador criado"
          },
          "400": {
            "description": "token invalido"
          },
          "401": {
            "description": "token nao inserido"
          },
          "422": {
            "description": "Erro -> tentando usar nome existente"
          },
          "500": {
            "description": "erro no servidor"
          }
        }
      }
    },
    "/pokemon/excluirHabilidade/{id}": {
      "delete": {
        "description": "Rota para excluir uma Habilidade, precisa ter o token de admin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "habilidade excluido"
          },
          "400": {
            "description": "token invalido"
          },
          "401": {
            "description": "token invalido -> usuario tentando acessar"
          },
          "404": {
            "description": "id da habilidade nao encontrado"
          },
          "500": {
            "description": "erro no servidor"
          }
        }
      }
    },
    "/pokemon/excluirPokemon/{id}": {
      "delete": {
        "description": "Rota para excluir um Pokemon, precisa ter o token de admin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "pokemon excluido"
          },
          "400": {
            "description": "token invalido"
          },
          "401": {
            "description": "token invalido -> usuario tentando acessar"
          },
          "404": {
            "description": "id do pokemon nao encontrado"
          },
          "500": {
            "description": "erro no servidor"
          }
        }
      }
    },
    "/pokemon/excluirTreinador/{nome}": {
      "delete": {
        "description": "Rota para excluir um Treinador, precisa ter o token de admin",
        "parameters": [
          {
            "name": "nome",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "treinador excluido"
          },
          "400": {
            "description": "token invalido"
          },
          "401": {
            "description": "token invalido -> usuario tentando acessar"
          },
          "404": {
            "description": "treindor nao encontrado"
          },
          "500": {
            "description": "erro no servidor"
          }
        }
      }
    },
    "/pokemon/attHabilidade/": {
      "put": {
        "description": "Rota que atualiza as habilidades, necessita do req.body e token de admin, atualiza o nome, descricao, efeito e nivel",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "o id da habilidade para atualizar: 10234234234a"
                },
                "nome": {
                  "example": "nome a ser mudado: chute forte"
                },
                "descricao": {
                  "example": "descricao a ser mudado: dependendo do q estiver calçando doi bastante"
                },
                "efeito": {
                  "example": "efeito a ser mudado: dano alto"
                },
                "nivel": {
                  "example": "nivel a ser mudado: 15"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "habilidade alterada"
          },
          "400": {
            "description": "token invalido"
          },
          "401": {
            "description": "token invalido -> usuario tentando acessar"
          },
          "404": {
            "description": "habilidade nao encontrado || dados nao inseridos no body"
          },
          "500": {
            "description": "erro no servidor"
          }
        }
      }
    },
    "/pokemon/attPokemon/": {
      "put": {
        "description": "Rota que atualiza o pokemon, neecssita do req.body e token de admin, atualiza o nome, numero, tipo, e habilidades que possui",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "id do pokemon a ser atualizado: 42342342a"
                },
                "nome": {
                  "example": "nome a ser mudado: charmander"
                },
                "tipo": {
                  "example": "tipo a ser mudado: fogo"
                },
                "numero": {
                  "example": "numero a ser mudado: 4"
                },
                "habilidades": {
                  "example": "habilidades a ser mudado: [idHabilidade]"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "pokemon alterado"
          },
          "400": {
            "description": "token invalido"
          },
          "401": {
            "description": "token invalido -> usuario tentando acessar"
          },
          "404": {
            "description": "dados não inseridos no body || pokemon nao encontrado p alterar"
          },
          "500": {
            "description": "erro no servidor"
          }
        }
      }
    },
    "/pokemon/attTreinador/": {
      "put": {
        "description": "Rota que atualiza o treinador, necessita do req.body e token de admin, atualiza o nome, level e os pokemons que possui.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "id do treinador a ser atualizado: art23iop4j24324"
                },
                "nome": {
                  "example": "nome a ser att: kodnho"
                },
                "pokemonId": {
                  "example": "array dos pokemons a serem atualizados: [idPokemon, idPokemon2]"
                },
                "level": {
                  "example": "level a ser att: 32"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "treinador atualizado"
          },
          "400": {
            "description": "token invalido"
          },
          "401": {
            "description": "token invalido -> usuario tentando acessar"
          },
          "404": {
            "description": "dados não inseridos no body || treinador nao encontrado p alterar"
          },
          "500": {
            "description": "erro no servidor"
          }
        }
      }
    },
    "/pokemon/habilidades": {
      "get": {
        "description": "Rota que lista as habilidades com limite, com query limite e pagina, limite precisa ser 5, 10 ou 30. Precisa do token de admin",
        "parameters": [
          {
            "name": "limite",
            "in": "query",
            "type": "string"
          },
          {
            "name": "pagina",
            "in": "query",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retorna as habilidades de acordo com o limite e a pagina"
          },
          "400": {
            "description": "token invalido"
          },
          "401": {
            "description": "token invalido -> usuario tentando acessar"
          },
          "404": {
            "description": "query do limite invalido"
          }
        }
      }
    },
    "/pokemon/pokemons": {
      "get": {
        "description": "Rota que lista os pokemons com limite, com query limite e pagina, limite precisa ser 5, 10 ou 30. Precisa do token de admin",
        "parameters": [
          {
            "name": "limite",
            "in": "query",
            "type": "string"
          },
          {
            "name": "pagina",
            "in": "query",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retorna os pokemons de acordo com o limite e a pagina"
          },
          "400": {
            "description": "token invalido"
          },
          "401": {
            "description": "token invalido -> usuario tentando acessar"
          },
          "404": {
            "description": "query do limite invalido"
          }
        }
      }
    },
    "/pokemon/treinadores": {
      "get": {
        "description": "Rota que lista os treinadores com limite, com query limite e pagina, limite precisa ser 5, 10 ou 30",
        "parameters": [
          {
            "name": "limite",
            "in": "query",
            "type": "string"
          },
          {
            "name": "pagina",
            "in": "query",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retorna os treinadores de acordo com o limite e a pagina"
          },
          "400": {
            "description": "token invalido"
          },
          "401": {
            "description": "token invalido -> usuario tentando acessar"
          },
          "404": {
            "description": "query do limite invalido"
          }
        }
      }
    },
    "/pokemon/habilidadesDisponiveis/{idTreinador}": {
      "get": {
        "description": "Rota de Lógica de negócio, mostra quais habilidades o treinador consegue usar dos seus pokemons",
        "parameters": [
          {
            "name": "idTreinador",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retorna as habilidades que o treinador consegue usar dos seus pokemons"
          },
          "400": {
            "description": "token invalido"
          },
          "401": {
            "description": "acesso negado -> nao tem token ou token invalido"
          },
          "404": {
            "description": "treinador nao encontrado"
          },
          "500": {
            "description": "erro no servidor"
          }
        }
      }
    },
    "/pokemon/pokemons/{id}": {
      "get": {
        "description": "Rota de Lógica de negócio, mostra quais pokemons o treinador possui",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retorna quais pokemons o treinador possui"
          },
          "400": {
            "description": "token invalido -> não possui token"
          },
          "401": {
            "description": "acesso negado -> nao tem token ou token invalido"
          },
          "404": {
            "description": "treinador nao encontrado"
          },
          "500": {
            "description": "erro no servidor"
          }
        }
      }
    },
    "/pokemon/habilidadesPokemon/{id}": {
      "get": {
        "description": "Rota de Lógica de negócio, mostra quais habilidades o pokemon possui",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retorna os nomes das habilidades que os pokemons possui"
          },
          "400": {
            "description": "token invalido"
          },
          "401": {
            "description": "acesso negado -> nao tem token ou token invalido"
          },
          "404": {
            "description": "treinador nao encontrado"
          },
          "500": {
            "description": "erro no servidor"
          }
        }
      }
    },
    "/install/": {
      "get": {
        "description": "instala o banco de dados (criação das tabelas/coleções e inserção de dados no banco). ",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}